# https://docs.gitlab.com/ce/ci/yaml/
stages:
  - check
  - lint
  - compile
  - build
  - test
  - codequality

variables:
  APT_CACHE_DIR: apt-cache
  PIP_CACHE_DIR: pip-cache

cache:
  untracked: true
  paths:
    - apt-cache
    - pip-cache

# -- stages

check:
  stage: check
  image: python:3.5.4
  variables:
    ENV: development
  before_script:
    - python --version
    - pip --version
    - pip install flake8 flake8-docstrings -c constraints.txt
  script:
    - make clean
    - make check
  except:
    - tags

lint:
  stage: lint
  image: python:3.5.4
  before_script:
    - mkdir -pv $APT_CACHE_DIR && apt-get -qq update
    - apt-get -qq -o dir::cache::archives="$APT_CACHE_DIR" install -y
      gcc zlib1g zlib1g-dev libmemcached11 libmemcached-dev
    - python --version
    - pip --version
  script:
    - ENV=development make setup
    - ENV=test make setup
    - make lint
  except:
    - tags

compile:
  stage: compile
  image: node:7.10.1
  variables:
    NODE_ENV: production
  before_script:
    - mkdir -pv $APT_CACHE_DIR && apt-get -qq update
    - apt-get -qq -o dir::cache::archives="$APT_CACHE_DIR" install -y
      gettext
    - node --version
    - npm --version
    - nmp install --global i18next-conv
  script:
    - make catalog
  artifacts:
    untracked: true
    paths:
      - locale
      - static/locale
  except:
    - tags

build:
  stage: build
  image: node:7.10.1
  variables:
    NODE_ENV: production
  before_script:
    - node --version
    - npm --version
    - npm install --global gulp-cli
    - npm install --ignore-scripts
  script:
    - make build
  artifacts:
    untracked: true
    paths:
      - static
  except:
    - tags

test:
  stage: test
  image: python:3.5.4
  services:
    - postgres:9.6
    - redis:3.2
  variables:
    ENV: test
    POSTGRES_DB: aarau_test
    POSTGRES_USER: aarau
    POSTGRES_PASSWORD: aarau
  before_script:
    - mkdir -pv $APT_CACHE_DIR && apt-get -qq update
    - apt-get -qq -o dir::cache::archives="$APT_CACHE_DIR" install -y
      gcc zlib1g zlib1g-dev libmemcached11 libmemcached-dev
    - python --version
    - pip --version
  script:
    - make setup
    - make db-init
    - make db-migrate
    - make coverage
  except:
    - tags

codequality:
  stage: codequality
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  before_script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate validate-config
    - docker run --env CODECLIMATE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate engines:install
  script:
    - docker run --env CODECLIMATE_CODE="$PWD"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      --volume /tmp/cc:/tmp/cc
      codeclimate/codeclimate analyze -f json > codequality.json
  artifacts:
    paths:
      - codequality.json
